{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": ["eslint:recommended", "plugin:react/recommended", "plugin:@typescript-eslint/recommended"],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": ["react", "@typescript-eslint"],
  "rules": {
    "linebreak-style": ["error", "unix"],
    "quotes": ["error", "single"],
    "semi": ["error", "never"]
  },
  "overrides": [
    {
      "extends": [
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "eslint:recommended",
        "plugin:jsdoc/recommended"
      ],
      "parserOptions": {
        "project": "./tsconfig.json",
        "ecmaFeatures": {
          "jsx": true
        },
        "ecmaVersion": 2018,
        "sourceType": "module"
      },
      "files": ["*.ts", "*.tsx"],
      "parser": "@typescript-eslint/parser",
      "plugins": ["@typescript-eslint", "prettier"],
      "rules": {
        "no-undef": "off",
        "prettier/prettier": [
          "error",
          {
            "endOfLine": "auto"
          }
        ],
        "@typescript-eslint/array-type": ["error", { "default": "array" }],
        "arrow-parens": "off",
        "@typescript-eslint/no-explicit-any": 2,
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "interface",
            "format": ["PascalCase"],
            "custom": {
              "regex": "^I[A-Z]",
              "match": true
            }
          }
        ],
        "max-classes-per-file": ["error", 1],
        "max-len": ["error", { "code": 200 }],
        "@typescript-eslint/explicit-member-accessibility": "off",
        "@typescript-eslint/member-ordering": "off",
        "no-multiple-empty-lines": ["error", { "max": 1, "maxEOF": 0 }],
        "no-console": ["error", { "allow": ["debug", "info", "time", "timeEnd", "trace"] }],
        "no-empty": "error",
        "@typescript-eslint/no-inferrable-types": 2,
        "@typescript-eslint/no-non-null-assertion": 2,
        "@typescript-eslint/no-empty-interface": [
          "error",
          {
            "allowSingleExtends": false
          }
        ],
        "no-magic-numbers": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "@typescript-eslint/no-magic-numbers": "off",
        "@typescript-eslint/no-namespace": 2,
        "no-eval": "error",
        "@typescript-eslint/no-floating-promises": "off",
        "@typescript-eslint/no-misused-promises": "off",
        "no-fallthrough": "error",
        "no-use-before-define": "off",
        "@typescript-eslint/no-var-requires": 2,
        "func-style": ["error", "expression", { "allowArrowFunctions": true }],
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/ban-types": [
          "warn",
          {
            "types": {
              "{}": {
                "message": "Use object instead",
                "fixWith": "object"
              },
              "Object": {
                "message": "Use object instead",
                "fixWith": "object"
              },
              "object": false
            }
          }
        ],
        "curly": "error",
        "require-await": "error",
        "no-cond-assign": "error",
        "no-redeclare": "error",
        "no-duplicate-case": "error",
        "eqeqeq": "error",
        "no-unused-expressions": "error",
        "no-shadow": "off",
        "@typescript-eslint/no-shadow": "error",
        "quote-props": ["error", "as-needed"],
        "sort-keys": "off",
        "sort-imports": "off",
        "quotes": "off",
        "@typescript-eslint/quotes": ["error", "single"],
        "jsdoc/no-undefined-types": "off",
        "jsdoc/require-returns-description": "off"
      }
    }
  ]
}
